<launch>
  <arg name="namespace" default="robot1"/>
  
  <arg name="Pose2" default="false"/>
  <arg unless="$(arg Pose2)" name="x_init" value="2.25"/>
  <arg if="$(arg Pose2)" name="x_init" value="2.25"/>
  <arg unless="$(arg Pose2)" name="y_init" value="3.21"/>
  <arg if="$(arg Pose2)" name="y_init" value="-8.21"/>
  <arg unless="$(arg Pose2)" name="yaw_init" value="4.18"/>
  <arg if="$(arg Pose2)" name="yaw_init" value="-4.18"/>
		
  <arg name="model" default="$(find simulation_env)/urdf/minicar_description/Car_with_flag.xacro"/>

  <group ns="$(arg namespace)">

  	<param name="robot_description" command="$(find xacro)/xacro.py $(arg model) ns:=$(arg namespace)"/>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg x_init) -y $(arg y_init) -z 0.0 -Y $(arg yaw_init) -unpause -urdf -model $(arg namespace) -param robot_description" respawn="false" output="screen" />


  	<node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
    	    <param name="publish_frequency" type="double" value="30.0" />	
	    <param name="tf_prefix" type="string" value="$(arg namespace)" />
  	</node>

  	<rosparam command="load"
            file="$(find simulation_env)/config/joint.yaml"
            ns="$(arg namespace)/joint_state_controller" />
  	<rosparam command="load"
            file="$(find simulation_env)/config/diffdrive.yaml"
            ns="$(arg namespace)/diffdrive_controller" />

  	<node name="controller_spawner" pkg="controller_manager" type="spawner"
    		args="joint_state_controller
          		diffdrive_controller
          		--shutdown-timeout 3"/>

    
  </group>
        
  <node ns="$(arg namespace)" pkg="simulation_env" name="pose_pub" type="tf_subscribe_ns">
	<param name="Name"            type="string" value="$(arg namespace)"/>
  </node>
  <node ns="$(arg namespace)" pkg="simulation_env" name="path_pub" type="path_pub.py">
	<remap from="/robot_pose" to="/$(arg namespace)/robot_pose"/>
  </node>


</launch>
